
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> set.seed(0)
> require(limma)
Loading required package: limma
> 
> # Batch-blocked:
> for (x in 1:4) {
+     gvar <- 1
+     if (x==1L) { 
+         treatment <- factor(rep(1:2, each=30))
+         batch <- factor(rep(1:6, each=10))
+     } else if (x==2L) { 
+         treatment <- factor(rep(1:2, each=150))
+         batch <- factor(rep(1:6, each=50))
+     } else if (x==3L) {
+         treatment <- factor(rep(1:2, each=100))
+         batch <- factor(rep(1:20, each=10))
+     } else {
+         treatment <- factor(rep(1:2, each=100))
+         batch <- factor(rep(1:20, each=10))
+         gvar <- 5/rchisq(10000, 5)
+     }
+ 
+     design <- model.matrix(~treatment)
+ 
+     for (sd in c(1:3)) { 
+         # Data generation with a batch effect.
+         dummy <- matrix(rnorm(10000 * length(treatment), sd=sqrt(gvar)), ncol=length(batch))
+         batch.effect <- matrix(rnorm(10000 * 20, sd=sd), ncol=20)
+         dummy <- dummy+batch.effect[,as.integer(batch)]
+         truth <- (sd^2)/(sd^2+gvar)
+ 
+         cor <- duplicateCorrelation(dummy, design, block=batch)
+         fit <- lmFit(dummy, design, block=batch, correlation=cor$consensus)
+         fit <- eBayes(fit, robust=TRUE)
+         res <- topTable(fit, coef=ncol(design), sort.by="none", n=Inf)
+ 
+         # Using the true value (unless there is none).
+         if (x!=4) {
+             alt.fit <- lmFit(dummy, design, block=batch, correlation=truth)
+             alt.fit <- eBayes(alt.fit, robust=TRUE)
+             alt.res <- topTable(alt.fit, coef=ncol(design), sort.by="none", n=Inf)
+         }
+ 
+         cat(sprintf("Scenario is %s, sd is %i", x, sd), "\n")
+         cat(sprintf("Consensus is %.5f, truth is %.5f", cor$consensus, mean(truth)), "\n")
+         cat(sprintf("Type I error at 1%% for consensus is %.5f", sum(res$P.Value<=0.01)/10000), "\n")
+         if (x!=4) { 
+             cat(sprintf("Type I error at 1%% for truth is %.5f", sum(alt.res$P.Value<=0.01)/10000), "\n")
+         }
+     }
+     cat("\n")
+ }
Scenario is 1, sd is 1 
Consensus is 0.45841, truth is 0.50000 
Type I error at 1% for consensus is 0.01840 
Type I error at 1% for truth is 0.01070 
Scenario is 1, sd is 2 
Consensus is 0.76743, truth is 0.80000 
Type I error at 1% for consensus is 0.01730 
Type I error at 1% for truth is 0.00910 
Scenario is 1, sd is 3 
Consensus is 0.88312, truth is 0.90000 
Type I error at 1% for consensus is 0.01630 
Type I error at 1% for truth is 0.00910 

Scenario is 2, sd is 1 
Consensus is 0.45584, truth is 0.50000 
Type I error at 1% for consensus is 0.01910 
Type I error at 1% for truth is 0.01170 
Scenario is 2, sd is 2 
Consensus is 0.76796, truth is 0.80000 
Type I error at 1% for consensus is 0.02060 
Type I error at 1% for truth is 0.01110 
Scenario is 2, sd is 3 
Consensus is 0.87961, truth is 0.90000 
Type I error at 1% for consensus is 0.01870 
Type I error at 1% for truth is 0.00860 

Scenario is 3, sd is 1 
Consensus is 0.49086, truth is 0.50000 
Type I error at 1% for consensus is 0.01190 
Type I error at 1% for truth is 0.01080 
Scenario is 3, sd is 2 
Consensus is 0.79385, truth is 0.80000 
Type I error at 1% for consensus is 0.01120 
Type I error at 1% for truth is 0.01030 
Scenario is 3, sd is 3 
Consensus is 0.89644, truth is 0.90000 
Type I error at 1% for consensus is 0.01150 
Type I error at 1% for truth is 0.01010 

Scenario is 4, sd is 1 
Consensus is 0.45212, truth is 0.45476 
Type I error at 1% for consensus is 0.02130 
Scenario is 4, sd is 2 
Consensus is 0.76441, truth is 0.74423 
Type I error at 1% for consensus is 0.02390 
Scenario is 4, sd is 3 
Consensus is 0.87939, truth is 0.85925 
Type I error at 1% for consensus is 0.02350 

> 
> 
> proc.time()
   user  system elapsed 
332.456   0.103 332.688 

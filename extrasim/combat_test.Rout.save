
R version 3.3.1 Patched (2016-08-05 r71041) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This script aims to show that ComBat, despite its EB treatment of 
> # the batch effect, is not a panacea for confounding designs.
> 
> plate.ids <- factor(rep(1:6, each=50))
> conditions <- factor(rep(1:2, each=150))
> 
> require(limma)
Loading required package: limma
> design <- model.matrix(~conditions)
> 
> # We can't use it with the 'design', as it's confounding and breaks it.
> require(sva)
Loading required package: sva
Loading required package: mgcv
Loading required package: nlme
This is mgcv 1.8-13. For overview type 'help("mgcv-package")'.
Loading required package: genefilter
> x <- matrix(0, ncol=length(plate.ids), nrow=10)
> try(y <- ComBat(x, plate.ids, mod=design)) # Confounding, breaks.
Found 6 batches
Adjusting for 1 covariate(s) or covariate level(s)
Error in ComBat(x, plate.ids, mod = design) : 
  The covariate is confounded with batch! Remove the covariate and rerun ComBat
> try(y <- ComBat(x, plate.ids, mod=design[,-1])) 
Found 6 batches
Adjusting for 1 covariate(s) or covariate level(s)
Error in ComBat(x, plate.ids, mod = design[, -1]) : 
  The covariate is confounded with batch! Remove the covariate and rerun ComBat
> 
> for (n in c(100, 200, 500)) { 
+     x <- matrix(rnorm(600000), ncol=length(plate.ids))
+     first.group <- conditions==1L
+     de.genes <- seq_len(n)
+     x[de.genes,first.group] <- x[de.genes,first.group] + 2
+     
+     y <- ComBat(x, plate.ids)
+     cat("## Number of DE genes:", n, "\n")
+     print(summary(rowMeans(y[de.genes,first.group])-rowMeans(y[de.genes,!first.group]))) # Differences squeezed inwards (but not totally lost, due to EB shrinkage).
+     print(summary(rowMeans(x[de.genes,first.group])-rowMeans(x[de.genes,!first.group]))) # Differences retained.
+     
+     fit.y <- lmFit(y, design)
+     fit.x <- lmFit(x, design)
+     cat("## Differences between variances\n")
+     print(summary(abs(fit.x$sigma-fit.y$sigma)/fit.x$sigma)) # Similar variances, so smaller differences = loss of power.
+     cat("\n")
+ }
Found 6 batches
Adjusting for 0 covariate(s) or covariate level(s)
Standardizing Data across genes
Fitting L/S model and finding priors
Finding parametric adjustments
Adjusting the Data
## Number of DE genes: 100 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.3768  0.4248  0.4451  0.4452  0.4654  0.5195 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.704   1.906   1.998   1.994   2.080   2.305 
## Differences between variances
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.007076 0.012560 0.015570 0.016780 0.019760 0.043920 

Found 6 batches
Adjusting for 0 covariate(s) or covariate level(s)
Standardizing Data across genes
Fitting L/S model and finding priors
Finding parametric adjustments
Adjusting the Data
## Number of DE genes: 200 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.2245  0.2643  0.2769  0.2771  0.2892  0.3296 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.672   1.925   2.010   2.008   2.084   2.356 
## Differences between variances
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00661 0.01292 0.01591 0.01697 0.02014 0.04827 

Found 6 batches
Adjusting for 0 covariate(s) or covariate level(s)
Standardizing Data across genes
Fitting L/S model and finding priors
Finding parametric adjustments
Adjusting the Data
## Number of DE genes: 500 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.09634 0.12460 0.13160 0.13160 0.13890 0.16450 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.562   1.918   1.989   1.988   2.069   2.337 
## Differences between variances
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00650 0.01264 0.01559 0.01650 0.01942 0.04365 

> 
> # In general, the more DE genes there are, the larger the estimate of the variance of the batch effect (as there's no robustness).
> # This results in less shrinkage, which leads to a batch effect estimate closer to the DE effect, and reduction in the effect size upon correction.
> 
> proc.time()
   user  system elapsed 
  5.947   0.087   6.031 
